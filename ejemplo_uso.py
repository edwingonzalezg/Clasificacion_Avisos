"""
Ejemplo de uso del sistema de clasificaci√≥n de avisos de falla

Este script muestra c√≥mo usar el sistema para procesar y clasificar avisos
de falla extra√≠dos del sistema SAP.
"""

import pandas as pd
from packagename.preprocessing.preprocessing import preprocesamiento
from packagename.classify.classify import clasificador

def ejemplo_clasificacion_avisos():
    """
    Ejemplo b√°sico de c√≥mo usar el sistema de clasificaci√≥n.
    
    NOTA: Este ejemplo requiere archivos de datos reales del sistema SAP.
    """
    
    print("üöÄ Sistema de Clasificaci√≥n Autom√°tica de Avisos de Falla")
    print("=" * 60)
    
    # PASO 1: Cargar datos (normalmente desde archivos Excel exportados de SAP)
    print("\nüìÇ PASO 1: Cargando datos...")
    print("- df_total: Datos principales de avisos desde SAP")
    print("- df_dic_da: Diccionario corrector para 'Descripci√≥n del aviso'")
    print("- df_dic_te: Diccionario corrector para 'Texto explicativo'")
    print("- df_bow: Bolsa de palabras para clasificaci√≥n")
    
    # En un caso real, cargar√≠as as√≠:
    # df_total = pd.read_excel("qFallas.xlsx")
    # df_dic_da = pd.read_excel("Diccionario_DA.xlsx")
    # df_dic_te = pd.read_excel("Diccionario_TE.xlsx")
    # df_bow = pd.read_excel("BoW_clasificacion_avisos.xlsx")
    
    # PASO 2: Preprocesamiento de texto
    print("\nüîß PASO 2: Preprocesamiento de texto...")
    print("- Normalizaci√≥n de texto (quitar acentos, min√∫sculas)")
    print("- Limpieza con expresiones regulares")
    print("- Aplicaci√≥n de diccionarios correctores")
    print("- Filtrado de palabras irrelevantes ('de', 'la', 'el', 'a')")
    
    # En un caso real, ejecutar√≠as:
    # df_procesado, visualizacion = preprocesamiento(df_total, df_dic_da, df_dic_te)
    
    # PASO 3: Clasificaci√≥n autom√°tica
    print("\nü§ñ PASO 3: Clasificaci√≥n autom√°tica...")
    print("- An√°lisis de longitud de texto (< 40 caracteres = 'Pendiente')")
    print("- B√∫squeda de palabras clave en descripci√≥n y texto explicativo")
    print("- Aplicaci√≥n de reglas de negocio seg√∫n diagrama de flujo")
    print("- Asignaci√≥n de clasificaciones:")
    print("  ‚Ä¢ Clasificaci√≥n: 'Pendiente', 'No aplica', 'Condici√≥n', 'Falla'")
    print("  ‚Ä¢ Proceso gesti√≥n: 'Pendiente', 'No aplica', 'Inteligencia artificial', etc.")
    print("  ‚Ä¢ Tipo falla/SP: 'Pendiente', 'No aplica'")
    
    # En un caso real, ejecutar√≠as:
    # clasificador()  # Usa variable global df_total
    
    # PASO 4: Exportaci√≥n de resultados
    print("\nüìä PASO 4: Exportaci√≥n de resultados...")
    print("- Generaci√≥n de archivo Excel: 'clasificacion.xlsx'")
    print("- Listo para importar en Power BI")
    print("- Reportes disponibles: MTBF, MTTR, Bad Actors")
    
    print("\n‚úÖ Proceso completado exitosamente!")
    print("\nüí° Beneficios obtenidos:")
    print("   ‚Ä¢ Clasificaci√≥n autom√°tica de cientos de avisos")
    print("   ‚Ä¢ Reducci√≥n de 200+ horas de trabajo manual")
    print("   ‚Ä¢ Mayor consistencia y precisi√≥n en clasificaci√≥n")
    print("   ‚Ä¢ Informaci√≥n inmediata para decisiones de mantenimiento")

def mostrar_flujo_trabajo():
    """Muestra el flujo de trabajo completo del sistema."""
    
    print("\nüìã FLUJO DE TRABAJO COMPLETO")
    print("=" * 40)
    
    pasos = [
        "1. üì• Extraer datos de SAP usando transacci√≥n IW49",
        "2. üíæ Guardar archivos Excel en ubicaci√≥n especificada",
        "3. üîß Ejecutar preprocesamiento de texto",
        "4. ü§ñ Aplicar algoritmo de clasificaci√≥n NLP",
        "5. üìä Generar archivo Excel con clasificaciones",
        "6. üìà Importar resultados en Power BI",
        "7. üìã Generar reportes de confiabilidad (MTBF, MTTR, Bad Actors)"
    ]
    
    for paso in pasos:
        print(f"   {paso}")
    
    print(f"\nüéØ Resultado: Avisos clasificados autom√°ticamente y listos para an√°lisis")

if __name__ == "__main__":
    ejemplo_clasificacion_avisos()
    mostrar_flujo_trabajo()